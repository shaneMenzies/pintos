TODO: Error Management System
TODO:

    Function to allocate certain areas of memory 
        (framebuffer_init should use this to allocate the framebuffer)

    seperate functions to allocate different sizes?
        (i.e. function to allocate a gigablock, one to allocate a megablock, etc.)

        function to allocate block of certain size at a target address?
            This could be used in previous functions to allocate memory

    functions to deallocate memory?
        Maybe the blocks should have in use flags?

    functions to update headers (or tailers?) of all memory or even just certain areas?

    how to store info on current state of a block of data?

        1024 bytes:
            bit for each byte: uses way too much memory, requires 1/8th of total memory
                acceptable percentage used?
                    at most ~5% of memory

                for 1024 bytes, 48 bytes used would be a bit under 5%
                    48 bytes = 4.6875% used
                        3 bytes of description for every 64 bytes of data
                    64 bytes = 6.25% used
                        1 byte for every 16 bytes
                            1 bit for 2 bytes

            store largest space: much less memory, 2 bytes for all 1024
                easiest way to calculate?
                    store addresses of start and end of largest space?
                        adds 8/16 bytes to total usage
                            still smaller than previous though, 10/18 bytes per 1024
                                32-bit: 0.977% used up

                        when change is made to addresses between those 2, then update the size
                            easy if allocation starts or ends at those addresses
                                more complex otherwise, but not super likely to happen

                        likely to leave lots of small spaces
                            possibly also store total space free or size of smallest space?
                                total space free: adds 2 bytes
                                smallest space: adds another 10/18 bytes
